input {
  syslog {
    port => 2514
    type => "syslog"
  }
}


filter {
  grok {
    match => {
      "message" => [
        # Full pattern to extract all required fields
        "%{INT} <%{INT}>%{INT} %{TIMESTAMP_ISO8601:timestamp} %{WORD:node} %{WORD:application} - - - %{INT} %{WORD:vrf} %{DATA:alarm} \[%{WORD:item}\]: %{GREEDYDATA:log_message}"
      ]
    }
  }
}



# filter {
#   if [type] == "syslog" {
#     grok {
#       match => {
#         "message" => "^(?:%{INT:syslog_index} )?<%{NUMBER:syslog_pri}>1 %{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:host} %{WORD:platform} - - - %{INT:event_id} %{WORD:facility} %{DATA:alarm_code} \[%{DATA:user}\]: +%{GREEDYDATA:msg}"
#       }
#       tag_on_failure => ["_grokparsefailure"]
#     }

#     date {
#       match => ["timestamp", "ISO8601"]
#     }

#     mutate {
#       remove_tag => ["_grokparsefailure"]
#     }
#   }
# }

# filter {
#   if [type] == "syslog" {
#     grok {
#       match => {
#         "message" => "<%{NUMBER:syslog_pri}>1 %{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:host} %{WORD:platform} - - - %{INT:event_id} %{WORD:facility} %{DATA:alarm_code} \[%{DATA:user}\]:  %{GREEDYDATA:msg}"
#       }
#       tag_on_failure => []
#     }

#     date {
#       match => ["timestamp", "ISO8601"]
#     }
#   }
# }

output {
  stdout {
    codec => rubydebug
  }
}

output {
  opensearch {
    hosts => ["http://opensearch:9200"]
    index => "syslog-%{+YYYY.MM.dd}"
    user => "admin"
    password => "Nokia2018!"
    ssl => false
  }
}

